name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract tag version
      id: tag_version
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        VERSION=${TAG#v}
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Build and package release
      uses: devcontainers/ci@v0.3
      with:
        imageName: ghcr.io/${{ github.repository }}/release-build
        cacheFrom: ghcr.io/${{ github.repository }}/devcontainer
        runCmd: |
          # Initialize project
          just init

          # Build for all platforms
          just build-all

          # Create release directory
          mkdir -p release

          # Copy and rename binaries with version
          cp bin/versionator-linux-amd64 release/versionator-${{ steps.tag_version.outputs.version }}-linux-amd64
          cp bin/versionator-linux-arm64 release/versionator-${{ steps.tag_version.outputs.version }}-linux-arm64
          cp bin/versionator-darwin-amd64 release/versionator-${{ steps.tag_version.outputs.version }}-darwin-amd64
          cp bin/versionator-darwin-arm64 release/versionator-${{ steps.tag_version.outputs.version }}-darwin-arm64
          cp bin/versionator-windows-amd64.exe release/versionator-${{ steps.tag_version.outputs.version }}-windows-amd64.exe
          cp bin/versionator-windows-arm64.exe release/versionator-${{ steps.tag_version.outputs.version }}-windows-arm64.exe
          cp bin/versionator-freebsd-amd64 release/versionator-${{ steps.tag_version.outputs.version }}-freebsd-amd64

          # Create generic copies without version for convenience
          cp bin/versionator-linux-amd64 release/versionator-linux-amd64
          cp bin/versionator-linux-arm64 release/versionator-linux-arm64
          cp bin/versionator-darwin-amd64 release/versionator-darwin-amd64
          cp bin/versionator-darwin-arm64 release/versionator-darwin-arm64
          cp bin/versionator-windows-amd64.exe release/versionator-windows-amd64.exe
          cp bin/versionator-windows-arm64.exe release/versionator-windows-arm64.exe
          cp bin/versionator-freebsd-amd64 release/versionator-freebsd-amd64

          # Create checksums
          cd release
          sha256sum * > checksums.txt
          ls -la

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: versionator-release-${{ steps.tag_version.outputs.version }}
        path: release/
        retention-days: 90

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.tag }}
        name: Versionator ${{ steps.tag_version.outputs.version }}
        body: |
          ## Versionator ${{ steps.tag_version.outputs.version }}

          ### Downloads

          Download the appropriate binary for your platform:

          - **Linux (x64)**: `versionator-${{ steps.tag_version.outputs.version }}-linux-amd64`
          - **Linux (arm64)**: `versionator-${{ steps.tag_version.outputs.version }}-linux-arm64`
          - **macOS (Intel)**: `versionator-${{ steps.tag_version.outputs.version }}-darwin-amd64`
          - **macOS (Apple Silicon)**: `versionator-${{ steps.tag_version.outputs.version }}-darwin-arm64`
          - **Windows (x64)**: `versionator-${{ steps.tag_version.outputs.version }}-windows-amd64.exe`
          - **Windows (arm64)**: `versionator-${{ steps.tag_version.outputs.version }}-windows-arm64.exe`
          - **FreeBSD (x64)**: `versionator-${{ steps.tag_version.outputs.version }}-freebsd-amd64`

          ### Installation

          1. Download the appropriate binary for your platform
          2. Make it executable (Linux/macOS): `chmod +x versionator-*`
          3. Move to your PATH: `sudo mv versionator-* /usr/local/bin/versionator`

          ### Verification

          All binaries are provided with SHA256 checksums in `checksums.txt`.

          ```bash
          # Verify checksum (example for Linux)
          sha256sum -c checksums.txt --ignore-missing
          ```

          ### What's Changed

          See the [commit history](https://github.com/${{ github.repository }}/compare/${{ steps.tag_version.outputs.tag }}...${{ steps.tag_version.outputs.tag }}) for detailed changes.

        files: |
          release/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: release
    if: success()

    steps:
    - name: Release notification
      run: |
        echo "ðŸŽ‰ Successfully released Versionator ${{ needs.release.outputs.version }}"
        echo "ðŸ“¦ Release artifacts are available at: https://github.com/${{ github.repository }}/releases/tag/${{ needs.release.outputs.tag }}"
